                      Міністерство освіти і науки України

             Харківський національний університет радіоелектроніки



                         Кафедра програмної інженерії



                                     Звіт

                            з практичної роботи №2

                    з « Архітектури програмного забезпечення»




Виконав:                                                            Перевірив:

ст. гр. ПЗПІ-22-9                                       ст. викладач кафедри ПІ

Новомлинський В.І.                                               Сокорчук І.П.




                             Харків 2025
                                   1 ІСТОРІЯ ЗМІН


       Таблиця 1 - Історія змін

№                      Дата               Версія звіту    Опис змін та
                                                          виправлень

1                      7.05.2025          0.1             Створено
                                                          титульну сторінку
                                                          звіту, розділи 1, 2,
                                                          3, 4, додатки A, Б,
                                                          В




                                    2 ЗАВДАННЯ


       У процесі виконання практичного завдання необхідно підготувати
доповідь на тему "Архітектура однієї з відомих програмних систем". В процесі
виконання необхідно створити та оформити слайди презентації доповіді, а
також записати відео з виступом і опублікувати його на платформі YouTube.
Потрібно оформити звіт про виконану роботу та завантажити на dl.nure.ua.
Після чого сформувати звіт у форматі текстового файлу, а також файл з
прикладами програмного коду та завантажити його в відповідну директорію
GitHub-репозиторію.


                        3 ОПИС ВИКОНАНОЇ РОБОТИ


       У процесі виконання практичного завдання було підготовлено доповідь на
тему    "Архітектура    програмної     системи X". Окрему увагу приділено
теоретичному аналізу архітектурних стилів, використаних у побудові X, а також
розгляду      основних    технологій      зберігання    даних,    масштабування
інфраструктури, безпеки та особливостей інтеграції.
      Для доповіді було створено слайди презентації (див. дод. Б), які візуально
демонструють архітектурні підходи, компоненти системи та принципи їх
взаємодії. Структура доповіді охоплює такі розділи:
      1. Вступ;
      2. X як програмна система;
      3. Архітектурні стилі X;
      4. Основні компоненти системи;
      5. Зберігання та обробка даних;
      6. Безпека даних;
      7. Інтеграції та деплоймент;
      8. Масштабування і продуктивність;
      9. Інфраструктура програмної системи.
      10. Висновки.
      11. Список використаних джерел.
      На основі підготовленої презентації було створено відеодоповідь, у якій
послідовно викладено ключові аспекти архітектури X та зроблено висновки
щодо її ефективності та стійкості (див. дод. А).


                                 4 ВИСНОВКИ


      У ході виконання роботи було здобуто практичні навички аналізу
архітектури    великомасштабних      програмних     систем.    Отримано   глибше
розуміння принципів побудови складних інформаційних платформ, зокрема
застосування      мікросервісної,       сервіс-орієнтованої,     клієнт-серверної,
подієво-орієнтованої та розподіленої архітектур. Проаналізовано способи
організації зберігання та обробки даних, забезпечення безпеки, масштабування
системи й побудови стійкої інфраструктури, що дозволяють X ефективно
функціонувати на глобальному рівні.
                              ДОДАТОК А


      Посилання на відеозапис та текст хронологічного опису доповіді.


Відеозапис доповіді на YouTube: https://youtu.be/7nuzs3XsTqg


Хронологічний опис:

00:00 Вступ. Представлення теми доповіді та загальний вступ до доповіді.

00:21 Зміст доповіді. Огляд структури презентації.

00:51 X як програмна система. Опис системи.

01:43 Архітектурні стилі X.

03:03 Основні компоненти програмної системи.

04:09 Зберігання та обробка даних.

05:42 Безпека даних.

06:55 Інтеграції та деплоймент.

07:56 Масштабування і продуктивність.

09:08 Інфраструктура та технології.

09:53 Висновки.

10:41 Список використаних джерел.​



Посилання на файл з кодом в GitHub репозиторії:

https://github.com/NureNovomlynskyiViktor/apz-pzpi-22-9-novomlynskyi-viktor/tre
e/main/Pract2/pzpi-22-9-novomlynskyi-viktor-software-architecture
                              ДОДАТОК Б


​   Cлайди презентації доповіді.




                Рисунок Б.1 –Титульний слайд презентації




                Рисунок Б.2 – Слайд зі змістом презентації
        Рисунок Б.3 – Слайд з описом програмної системи X




Рисунок Б.4 – Слайд з описом використовуваних архітектурних стилів
Рисунок Б.5 – Слайд з основними компонентами програмної системи




Рисунок Б.6 – Слайд з описом технологій зберігання та обробки даних
           Рисунок Б.7 – Слайд з описом безпеки X




Рисунок Б.8 –Слайд з описом процесу інтеграції та оновлення X
Рисунок Б.9 – Слайд з описом технологій масштабування і продуктивності




      Рисунок Б.10 – Слайд з описом інфраструктури та технологій
        Рисунок Б.11 – Слайд з висновками




Рисунок Б.12 – Слайд з описом використаних джерел
                                    ДОДАТОК В



​           Приклади програмного коду.



Запит до REST API користувача:

1       GET /api/v1/users/456/profile

2       Authorization: Bearer eyJhbGciOi…

3

4       {

5               "id": "456",

6               "username": "@elonmusk",

7               "displayName": "Elon Musk",

8               "avatar": "https://cdn.x.com/avatar456.png",

9               "followersCount": 229000000

10          }



Подія Kafka: створення ретвіту.

    1       {

    2            "event": "RetweetCreated",

    3            "timestamp": "2025-05-14T10:15:00Z",

    4            "payload": {

    5              "retweetId": "tw9876",

    6              "originalTweetId": "tw1234",

    7              "userId": "u890",
 8              "retweetedAt": "2025-05-14T10:15:00Z"

 9         }

 10    }



Кешування твіта через Redis.

 1    import redis

 2    import json

 3

 4    r = redis.Redis(host='localhost', port=6379, db=0)

 5

 6 tweet = {"id": "tw123", "author": "u456", "text":
"Just landed on Mars!"}

 7    r.set("tweet:tw123", json.dumps(tweet), ex=60)

 8

 9    cached = r.get("tweet:tw123")

 10    if cached:

 11            print(json.loads(cached))



Шардінг твітів за ID.

 1    Tweet IDs:

 2         0000000 - 4999999     → Shard A (Tweet Store 1)

 3         5000000 - 9999999     → Shard B (Tweet Store 2)

 4         10000000+             → Shard C (Tweet Store 3)
WebSocket стрічка в реальному часі.​
 1 const socket = new
WebSocket('wss://stream.x.com/feed');

       2

       3   socket.onmessage = function (event) {

       4        const tweet = JSON.parse(event.data);

     5    console.log(`[${tweet.author}]:
${tweet.text}`);

       6   };



Canary Deployment (YAML).

 1    strategy:

 2      type: Canary

 3      canary:

 4         maxSurge: 10%

 5         maxUnavailable: 0

 6         steps:

 7           - setWeight: 10

 8           - pause: 5m

 9           - setWeight: 50

 10          - pause: 10m

 11          - setWeight: 100

